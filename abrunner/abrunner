#!/usr/bin/env python3
# Copyright (C) 2018 Hatching B.V.
# This file is licensed under the MIT License, see also LICENSE.

import argparse
import tempfile

from flask import Flask, request, jsonify, abort
from gevent.subprocess import Popen, TimeoutExpired

app = Flask(__name__)

@app.route("/", methods=["POST"])
def submit_sample():
    if "file" not in request.files:
        return abort(400, "File required")
    f = request.files["file"]
    x = tempfile.NamedTemporaryFile(prefix=".abrunner")
    f.save(x)
    p = Popen([args.program, x.name])
    try:
        exit_code = p.wait(timeout=args.timeout)
    except TimeoutExpired:
        p.kill()
        exit_code = -1
    # clamscan compatible; TODO: allow custom mapping
    if exit_code == 0:
        verdict = 0
    elif exit_code == 1:
        verdict = 100
    else:
        verdict = None
    return jsonify({"verdict": verdict})

if __name__ == "__main__":
    from gevent.pywsgi import WSGIServer

    parser = argparse.ArgumentParser()
    parser.add_argument("--bind", default="")
    parser.add_argument("--timeout", type=int, default=120)
    parser.add_argument("--port", type=int, default=8080)
    parser.add_argument("--program", default="true")

    args = parser.parse_args()
    scanner = args.program

    s = WSGIServer((args.bind, args.port), app)
    s.serve_forever()
